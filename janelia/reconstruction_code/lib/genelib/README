  This is a C-library still under continual expansion and development by Gene Myers.
It currently consists of the following modules:

  FOR IMAGE ANALYSIS:

    image_lib -- an abstraction for images and stacks based on .tif as the external format

    image_filters -- routines to filter images and a handful of common filters

    contour_lib -- an abstraction for outer-contours of a region

    level_set -- the level-set tree data abstraction in 2 and 3 dimensions

    water_shed -- a routine for computing the watershed decomposition of an image

    draw_lib -- routines to draw a variety of shapes, contours, water-sheds, level-sets,
                and so on on an image

    tiff_image, tiff_io -- a replacement for libtiff.  Reads, writes and interprets almost
                             any tiff (save those for fax and print media).

  FOR NUMERICAL ANALYSIS:

    fct_min -- routines to minimize functions of one or more variables

    fct_root -- routines to find roots of functions of one or more variables

    lu_matrix -- routines for inverting matrices, determinants, and solving systems of
                 linear equations based on the lu-decomposition (with partial pivoting).
                 Also tri-diagonal matrix solver and application to cubic splines.

    fft -- routines for real, complex 1- and multi-dimensional FFTs.

  GENERAL UTILITIIES:

    utilities -- a few guarded system calls and a spiffy command-line interpretation utility,
                 documented in detail, in the file utilities.pdf

    hash -- a hash table abstraction

    cdf -- a suite of routines for generating random variables from a suite of well-known
           probability distributions

    xfig -- routines for creating an "xfig" drawing.  I find it very useful for program
            animation or display of complex visual displays.  xfig is a rather old X11
            drawing program, but you can still download and install it on any Unix machine.

Most of the modules are fairly stable although I won't warrant that they are bug free.
Most have been used often and so fairly well exercised, particularly the general utilities.
The library for image filters is not very complete.  Some of the modules only handle 2D
images, or the 3D versions have not been tested save for image_lib where in the code for
3D stacks has been used a lot.  The numerical routines have all been tested and used but
not extensively.

  I consistently use a fairly sophisticated object management scheme that is described in
conventions.pdf.  To facilitate developement and avoid writing boring stylized code over
and over again, I developed an awk program that generates most of the code for this object
management (it is documented in the .pdf file).  Therefore the source for every module is
in a .p (*not* for pascal!) file that is transformed into a .c file by the awk program
manager.awk.

  But don't worry, the Makefile takes care of the above, just say, make and a library
"libmyers.a" gets built.  This can then be explicitly linked in, or implicitly with
"-lmyers" if you place the library on gcc's loader search path (the environment variable
LD_LIBRARY determines this on my Mac).  It's also convenient to get the directory containing
all the include (.h) files on gcc's search path.  On my Mac the environment variable for this
is CPATH, just "man gcc" to see which convention your Unix OS uses.
